version: '3.8'

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: nova-it-server-prod
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - nova-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: nova-it-client-prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      server:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    networks:
      - nova-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Add reverse proxy for production
  traefik:
    image: traefik:v2.9
    container_name: nova-it-traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - nova-network
    restart: unless-stopped
    profiles:
      - proxy

networks:
  nova-network:
    driver: bridge
    name: nova-it-network-prod

volumes:
  server_data:
    driver: local
    name: nova-it-server-data-prod